/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

import type { Image, Audio, Pdf, Video } from "@boundaryml/baml"
/**
 * Recursively partial type that can be null.
 *
 * @deprecated Use types from the `partial_types` namespace instead, which provides type-safe partial implementations
 * @template T The type to make recursively partial.
 */
export type RecursivePartialNull<T> = T extends object
    ? { [P in keyof T]?: RecursivePartialNull<T[P]> }
    : T | null;

export interface Checked<T,CheckName extends string = string> {
    value: T,
    checks: Record<CheckName, Check>,
}

export interface Check {
    name: string,
    expr: string
    status: "succeeded" | "failed"
}

export function all_succeeded<CheckName extends string>(checks: Record<CheckName, Check>): boolean {
    return get_checks(checks).every(check => check.status === "succeeded")
}

export function get_checks<CheckName extends string>(checks: Record<CheckName, Check>): Check[] {
    return Object.values(checks)
}
export enum AgeCategory {
  UNDER_13 = "UNDER_13",
  UNDER_16 = "UNDER_16",
  UNDER_18 = "UNDER_18",
  ADULT = "ADULT",
}

export enum Jurisdiction {
  EU = "EU",
  US = "US",
  INDIA = "INDIA",
  CHINA = "CHINA",
}

export enum ParentalControls {
  NONE = "NONE",
  MILD = "MILD",
  MODERATE = "MODERATE",
  STRICT = "STRICT",
}

export enum SensitivityLevel {
  LOW = "LOW",
  MEDIUM = "MEDIUM",
  HIGH = "HIGH",
}

export interface ComprehensiveClassification {
  safety: SafetyClassification
  educational: EducationalValue
  viewpoint: ViewpointAnalysis
  overall_confidence: number
  recommendation: string
  summary_reasoning: string
  
}

export interface EducationalValue {
  educational_score: number
  learning_objectives: string[]
  subject_areas: string[]
  cognitive_level: string
  reading_level: number
  factual_accuracy: number
  reasoning: string
  
}

export interface SafetyClassification {
  safety_score: number
  violence_level: number
  adult_content: boolean
  hate_speech: number
  misinformation_risk: number
  age_appropriateness: string
  reasoning: string
  content_warnings: string[]
  
}

export interface UserContext {
  age_category: AgeCategory
  jurisdiction: Jurisdiction
  parental_controls: ParentalControls
  sensitivity_level: SensitivityLevel
  
}

export interface ViewpointAnalysis {
  political_leaning: string
  bias_score: number
  perspective_diversity: number
  controversy_level: number
  source_credibility: number
  reasoning: string
  
}
